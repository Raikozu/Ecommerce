{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass AuthGuard {\n  constructor() {}\n  canActivate(route, state) {\n    if (localStorage.getItem(\"utente\") || localStorage.getItem(\"admin\")) {\n      return true;\n    }\n    return false; // Ritorna true se l'utente ha l'autenticazione o i permessi appropriati\n  }\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)();\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","canActivate","route","state","localStorage","getItem","factory","ɵfac","providedIn"],"sources":["C:\\Users\\franc\\Documents\\Job\\Progetti\\ecommerce\\frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot, UrlTree } from '@angular/router';\nimport { SellerService } from './services/seller.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor() {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot, \n    state: RouterStateSnapshot):Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree{\n    if(localStorage.getItem(\"utente\") || localStorage.getItem(\"admin\")){\n      return true;\n    }\n    return false; // Ritorna true se l'utente ha l'autenticazione o i permessi appropriati\n  }\n}"],"mappings":";AAKA,MAGaA,SAAS;EACpBC,YAAA,GAAe;EAEfC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,IAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC,IAAID,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MACjE,OAAO,IAAI;;IAEb,OAAO,KAAK,CAAC,CAAC;EAChB;;;AAVWN,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;SAATA,SAAS;EAAAO,OAAA,EAATP,SAAS,CAAAQ,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPT,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}