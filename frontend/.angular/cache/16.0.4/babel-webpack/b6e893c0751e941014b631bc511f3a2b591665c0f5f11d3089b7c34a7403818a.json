{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass AuthGuard {\n  canActivate(route, state) {\n    // La tua logica di autenticazione e controllo dei permessi\n    return false; // Ritorna true se l'utente ha l'autenticazione o i permessi appropriati\n  }\n}\n\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)();\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","canActivate","route","state","factory","ɵfac","providedIn"],"sources":["C:\\Users\\franc\\Documents\\Job\\Progetti\\ecommerce\\frontend\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    // La tua logica di autenticazione e controllo dei permessi\n    return false; // Ritorna true se l'utente ha l'autenticazione o i permessi appropriati\n  }\n}"],"mappings":";AAGA,MAGaA,SAAS;EACpBC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE;IACA,OAAO,KAAK,CAAC,CAAC;EAChB;;;AAJWH,SAAS,C;mBAATA,SAAS;AAAA;AAATA,SAAS,C;SAATA,SAAS;EAAAI,OAAA,EAATJ,SAAS,CAAAK,IAAA;EAAAC,UAAA,EAFR;AAAM;SAEPN,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}